#!/usr/bin/env python3

import sys
import os
import math

from codeutil import *

PATH = os.getcwd() + "/"

templates = {
    "c++":      "#include <bits/stdc++.h>\\n\\nusing namespace std;\\n\\nint main()\\n{{\\n\\n}}\\n",
    "c":        "#include <stdio.h>\\n\\nint main(){{\\n}}\\n",
    "gas":      "",
    "java":     "import java.io.*;\\nimport java.util.*;\\n\\npublic class {}\\n{{\\n    public static void main(String[] args)\\n    {{\\n        \\n    }}\\n}}",
    "python":   "",
}

def main():
    global ext
    global templates
    if len(sys.argv) < 2 or len(sys.argv) > 4:
        print(sys.argv[0].split("/")[-1] + " problem_name [--language language]")
        return 1
    try:
        os.mkdir(sys.argv[1])
    except FileExistsError:
        print("Folder " + sys.argv[1] + " already exists. Please remove it first.", file=sys.stderr)
        return 2
    try:
        lang = "c++" if len(sys.argv) < 4 else sys.argv[3].lower();
        to_create = [ext[lang], "in", "out", "err"]
        os.system("touch " + " ".join([sys.argv[1] + "/" + sys.argv[1] + "." + x for x in to_create]))
        os.system("cd " + sys.argv[1] + " && echo -e \"" + templates[lang].format(sys.argv[1]) + "\" > " + sys.argv[1] + "." + to_create[0])
        os.system("cd " + sys.argv[1] + " && nvim -p " + " ".join([sys.argv[1] + "." + x for x in to_create]))
    except KeyError:
        os.rmdir(sys.argv[1])
        print("Language " + sys.argv[3] + " is not supported.", file=sys.stderr)
        return 3

if __name__ == "__main__":
    try:
        sys.exit(main())
    except KeyboardInterrupt:
        sys.exit(1)
